spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost/realms/spring-boot-test
  datasource:
    url: jdbc:postgresql://localhost:5432/ge-inventory
    username: postgres
    password: postgres
  application:
    name: inventory-service
  cloud:
    function:
      definition: storeproduct;shopOrder;orderStock
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
#        default:
#          group: INVENTORY_SERVICE_GROUP
        storeproduct-in-0:
          destination: PRODUCT_TOPIC
          group: INVENTORY_SERVICE_GROUP
        shopOrder-in-0:
          destination: SHOP_ORDER
          group: INVENTORY_SERVICE_GROUP
        orderStock-out-0:
          destination: SHOP_ORDER_STOCK
#  kafka:
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: INVENTORY_SERVICE_GROUP
#      client-id: ${spring.application.name}
server:
  port: 8082
management.endpoints.web.exposure.include: '*'
