spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost/realms/spring-boot-test
  cloud:
    function:
      definition: store-producer
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        store-producer-out-0:
          destination: PRODUCT_TOPIC
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: jdbc:postgresql://localhost:5432/ge-store
    username: postgres
    password: postgres
  application:
    name: store-service
#  kafka:
#    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
  port: 8083
feign:
  circuitbreaker:
    enabled: true
management:
  endpoints:
    web:
      exposure:
        include: refresh
